# File: azure-pipelines.yml

trigger:
- master

pr:
- master

jobs:
- job: macOS_Catalina_Debug
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - script: |
      brew update
      brew install bison
      brew install z3
    displayName: 'package'
  - script: |
      cmake --version
      z3 --version
    displayName: 'printout'
  - script: |
      export PATH="/usr/local/opt/bison/bin:$PATH"
      export LDFLAGS="-L/usr/local/opt/bison/lib"
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=Debug
      cmake --build .
      cmake --build . --target install
      cmake --build . --target test
    displayName: 'build'

- job: macOS_Catalina_Release
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - script: |
      brew update
      brew install bison
      brew install z3
    displayName: 'package'
  - script: |
      cmake --version
      z3 --version
    displayName: 'printout'
  - script: |
      export PATH="/usr/local/opt/bison/bin:$PATH"
      export LDFLAGS="-L/usr/local/opt/bison/lib"
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=Release
      cmake --build .
      cmake --build . --target install 
      ./test/unit_tests
    displayName: 'build'

- job: Ubuntu_1604_LTS
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install bison
      sudo apt-get install flex
      sudo apt-get install z3
      sudo apt-get install libz3-dev
      sudo apt-get install g++-7   
    displayName: 'package'
  - script: |
      mkdir -p build 
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-7
      cmake --build .
      sudo cmake --build . --target install 
      cmake --build . --target test
    displayName: 'build'

- job: Ubuntu_1804_LTS
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install bison
      sudo apt-get install flex
      sudo apt-get install z3
      sudo apt-get install libz3-dev
      sudo apt-get install g++-8   
    displayName: 'package'
  - script: |
      mkdir -p build
      cd build
      cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-8
      cmake --build .
      sudo cmake --build . --target install 
      cmake --build . --target test
    displayName: 'build'

- job: Windows_2016
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      choco install winflexbison3
      choco install wget
      git submodule update --init --recursive
    displayName: 'package'

  - script: |
      wget https://github.com/Z3Prover/z3/releases/download/z3-4.8.8/z3-4.8.8-x86-win.zip
      unzip z3-4.8.8-x86-win.zip
      move z3-4.8.8-x86-win z3
    displayName: 'z3'

  - script: |
      cd extern
      cd glog
      md build
      cd build
      cmake ..
      cmake --build . --target install
    displayName: 'glog'

  - script: |
      cd extern
      cd json
      md build
      cd build
      cmake .. -DJSON_BuildTests=OFF
      cmake --build . --target install
    displayName: 'json'

  - script: |
      cd extern
      cd vlog-parser
      md build
      cd build
      cmake ..
      cmake --build . --target install
    displayName: 'vlog-parser'

  - script: |
      md build
      cd build
      # For building the test, we need CMAKE_MSVC_RUNTIME_LIBRARY (which will be supported in CMake 3.15+)
      cmake .. -DILANG_BUILD_TEST=OFF -DBUILD_SHARED_LIBS=OFF -DILANG_BUILD_INVSYN=OFF -DZ3_INCLUDE_DIR=$(Build.Repository.LocalPath)/z3/include -DZ3_LIBRARY=$(Build.Repository.LocalPath)/z3/bin/libz3.lib -DZ3_EXEC=$(Build.Repository.LocalPath)/z3/bin/z3.exe
      cmake --build .
      cmake --build . --target install
    displayName: 'build'

  - script: |
      cd starter
      md build
      cd build
      cmake .. -DZ3_INCLUDE_DIR=$(Build.Repository.LocalPath)/z3/include -DZ3_LIBRARY=$(Build.Repository.LocalPath)/z3/bin/libz3.lib -DZ3_EXEC=$(Build.Repository.LocalPath)/z3/bin/z3.exe
      cmake --build . 
    displayName: 'starter'

